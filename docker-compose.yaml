version: '3.9'
services:
  nginx:
    container_name: 'nginx-nest'
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - '80:80'
    depends_on:
      - web
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src:/app/src
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: '2'
          memory: '1000M'
    expose:
      - '3000'
    logging:
      driver: 'json-file'
  redis:
    image: redis:7.2
    restart: always
    command: redis-server
    ports:
      - '6379:6379'
    volumes:
      - ./data/redis:/var/lib/redis
      - ./data/redis-config:/usr/local/etc/redis
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ticketing_db
    ports:
      - '5432:5432'
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U postgres -d ticketing_db -h localhost -p 5432',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
  cron:
    build:
      context: ./batchServer
      dockerfile: Dockerfile
    volumes:
      - ./batchServer/src:/batch/src
    depends_on:
      db:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=sanghun
      - RABBITMQ_DEFAULT_PASS=sanghun
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'status']
      interval: 30s
      timeout: 10s
      retries: 5
